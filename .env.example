## If you don't use docker:
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

## If you do use docker use above and below:

# If you are using the docker compose file, it needs to be the same as the postgres hostname
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DATABASE=postgres
# You should change this before first boot

# Enter your domain name
DOMAIN_NAME=localhost
# Enter your public URL that points towards the websocket
PUBLIC_WEBSOCKET_URL=http://localhost:3001

SHARP_PORT=5000
SHARP_HTTP_PORT=5001

# The JWT secret should be long, random and similar to a password. Do not share it with anyone.
# Run `openssl rand -hex 64` to generate one
# Used for authentication
JWT_SECRET=REPLACE_ME_WITH_RANDOM_STRING

# S3-compatible works too.
PRIVATE_B2_KEY_ID=KEY_ID
PRIVATE_B2_APP_KEY=APP_KEY
PRIVATE_B2_BUCKET=BUCKET
PRIVATE_B2_REGION=us-west-001
PRIVATE_B2_ENDPOINT=http://s3.example.com

# A cookie from the website, optional & used in /test
TEST_AUTH_TOKEN=

# Comes from docker-compose
REDIS_URL=redis://redis:6379

# Cloudflare Turnstile keys, these are for testing & will validate any req. Replace with actual ones in prod.
PUBLIC_TURNSTILE_SITE_KEY=1x00000000000000000000AA

# Optional but required for Turnstile spam prevention in production
# These are the test keys that will accept any token
PRIVATE_TURNSTILE_SECRET_KEY=1x0000000000000000000000000000000AA
